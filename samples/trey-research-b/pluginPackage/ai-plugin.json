{
  "schema_version": "v2",
  "name_for_human": "Trey Research",
  "description_for_human": "Streamlines consultant assignment and time management.",
  "description_for_model": "The Trey Research plugin allows locating consultants by skills, roles, certifications, and availability, as well as charging hours and assigning consultants to projects.",
  "namespace": "trey",
  "functions": [
    {
      "name": "getUserInformation",
      "description": "Retrieve the consultant profile including skills, roles, certifications, location, availability, and project assignments.",     
      "states": {
        "reasoning": {
          "description": "\n# `getUserInformation() -> str` Returns the consultant object.",
          "instructions": "\n- Decide whether to invoke `getUserInformation()`:\n    - Check the last user message in the `conversation_memory` and the tool invocation history in the `turn_memory`:\n    - Based on the `result` from `turn_memory`, do I need to return a consultant information to answer the user message accurately? If so, invoke `getUserInformation()`. If no parameters are available, invoke `getUserInformation()` without any parameters."
        },
        "responding": {
          "description": "",
          "instructions": "\n  - Always show results in a paragraph with following columns: name, email, phone, skills, roles, certifications."
        }
      }
    },
    {
      "name": "getProjects",
      "description": "Returns detailed information about projects matching the specified project name and/or consultant name",
      "parameters": {
        "type": "object",
        "properties": {
          "consultantName": {
            "type": "string",
            "description": "The name of the consultant assigned to the project"
          },
          "projectName": {
            "type": "string",
            "description": "The name of the project or name of the client."
          }        
        }
      },
      "states": {
        "reasoning": {
          "description": "\n# `getProjects(consultantName: str, projectName: str) -> str` Returns detailed information about projects matching the specified project name and/or consultant name.",
          "instructions": "\n- Decide whether to invoke `getProjects(consultantName: str, projectName: str)`:\n    - Check the last user message in the `conversation_memory` and the tool invocation history in the `turn_memory`:\n    - Based on the `result` from `turn_memory`, do I need to return a list of projects to answer the user message accurately? If so, invoke `getProjects(consultantName: str, projectName: str) `. If any of the parameters is not available do not pass the specific parameter. All parameters are optional. If no parameters are available, invoke `getProjects()` without any parameters.\n* here are the descriptions for parameters:\n   - consultantName (str): The name of the consultant assigned to the project\n   - projectName (str): The name of the project or name of the client.\n"
        },
        "responding": {
          "description": "",
          "instructions": "\n  - Always show results in a tabular form with following columns: name,description, clientName, clientContact, location"
        }
      }
    }
  ],
  "runtimes": [
    {
      "type": "OpenApi",
      "auth": {
        "type": "none"
      },
      "spec": {
        "url": "openapi.yml"
      },
      "run_for_functions": ["getUserInformation","getProjects"]
    }
  ]
}
